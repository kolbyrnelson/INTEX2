{"version":3,"sources":["context.js","footer.js","header.js","leftContainer.js","rightContainer.js","productCard.js","home.js","help.js","about.js","details.js","search.js","filtered.js","analytics.js","App.js","context-provider.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","FooterContainer","props","color","className","style","width","backgroundColor","fluid","Date","getFullYear","to","fontSize","HeaderContainer","bg","expand","fixed","Brand","src","process","alt","maxHeight","Toggle","aria-controls","Collapse","id","LeftContainer","context","useContext","group1","campaign","filter","camp","parseInt","goal","group2","group3","group4","length","onClick","setFilteredCampaigns","RightContainer","top5","slice","sort","b","parseFloat","current_amount","height","map","key","campaign_id","title","ProductCard","prod","now","toFixed","progressInstance","label","position","bottom","md","border","top","right","Img","campaign_image_url","Footer","Title","textOverflow","overflow","display","WebkitLineClamp","WebkitBoxOrient","Text","location_city","value","prefix","displayType","thousandSeparator","render","Home","numOfCamp","showCount","animation","role","borderColor","e","loadMoreCamp","Help","xs","email","marginBottom","About","Details","match","useRouteMatch","item","find","params","useState","showRespOutput","setRespOutput","a","axios","post","column","unnamed","auto_fb_post_mode","currencycode","donators","days_active","description","has_beneficiary","user_id","visible_in_search","is_launched","campaign_hearts","social_share_total","location_country","location_zip","averageMoneyPerDay","donationsPerDay","PercentPerDay","SharesPerDay","campaignheartsPerDay","resp","respOutput","data","percCalc","Quality","campaigns","cid","padding","marginRight","fontWeight","ShowTheImage","margin","Search","window","scrollTo","SearchForm","history","useHistory","countries","Set","onSubmit","event","preventDefault","goalFilter","target","elements","formGoal","countryFilter","formCountry","stateFilter","formState","hasBeneficiaryFilter","formHasBeneficiary","percentGoalFilter","formPercentGoal","filterCampaigns","resetShowCount","push","handleSubmit","Body","textAlign","Group","as","bs","Label","sm","Control","type","defaultValue","name","country","size","variant","Filtered","filteredCampaigns","class","Predict","currencyCodes","PredictiveForm","showPrediction","setPrediction","validated","setValidated","checkValidity","console","log","stopPropagation","scroll","alert","city","undefined","concat","location_state","respInput","reCalcResp","Math","exp","Promise","resolve","setTimeout","noValidate","controlId","required","placeholder","state","code","paddingTop","App","noGutters","paddingBottom","onUpdate","path","component","Analytics","AppProvider","setState","produce","draft","myArray","input","showMore","actions","donation","update","this","Provider","get","cam","don","upd","Component","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.949ba1d4.chunk.js","sourcesContent":["import React from 'react'\n\n\nconst AppContext = React.createContext()\nexport default AppContext\n","import React from 'react';\r\nimport './App.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nexport default function FooterContainer(props){\r\n    return (\r\n        <MDBFooter color=\"blue\" className=\"font-small\" style={{width:\"100%\", backgroundColor:\"lightgrey\"}}>\r\n        <div className=\"footer-copyright text-center py-3\">\r\n          <MDBContainer fluid>\r\n            &copy; {new Date().getFullYear()} Copyright: <Link to=\"/\" style={{fontSize:\"100%\"}}>COVID-19 Fundraiser Analytics</Link>\r\n          </MDBContainer>\r\n        </div>\r\n      </MDBFooter>\r\n    )\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport * as bs from 'react-bootstrap';\r\n\r\nexport default function HeaderContainer(props){\r\n    return (\r\n        <bs.Navbar bg=\"light\" expand=\"lg\" style={{width:\"100%\"}} fixed='top'>\r\n            <Link to=\"/\">\r\n                <bs.Navbar.Brand>\r\n                    <img src={`${process.env.PUBLIC_URL}/Images/Fundrasier-Analytics.ico`} alt=\"vial\" style={{maxHeight:\"2rem\"}}/>\r\n                    COVID-19 Fundraiser Analytics\r\n                </bs.Navbar.Brand>\r\n            </Link>\r\n            <bs.Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n            <bs.Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <bs.Nav className=\"mr-auto\">\r\n                    <Link to=\"/\" className=\"nav-link\">Home</Link>\r\n                    <Link to=\"/about\" className=\"nav-link\">About</Link>\r\n                    <Link to=\"/help\" className=\"nav-link\">Help</Link>\r\n                </bs.Nav>\r\n                <bs.Nav>\r\n                    <Link to=\"/analytics\" className=\"nav-link\">Campaign Success Calculator</Link>\r\n                </bs.Nav>\r\n                <bs.Nav>\r\n                    <Link to=\"/search\" className=\"nav-link\"><i className=\"fas fa-search\"></i>  Search</Link>\r\n                </bs.Nav>\r\n                <bs.Nav>\r\n                </bs.Nav>\r\n            </bs.Navbar.Collapse>\r\n        </bs.Navbar>\r\n    )\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AppContext from './context';\r\n\r\nexport default function LeftContainer(props) {\r\n    const context = React.useContext(AppContext);\r\n        \r\n    const group1 = context.campaign.filter(camp => parseInt(camp.goal) < 2000);\r\n    const group2 = context.campaign.filter(camp => parseInt(camp.goal) >= 2000 && parseInt(camp.goal) < 10000);\r\n    const group3 = context.campaign.filter(camp => parseInt(camp.goal) >= 10000 && parseInt(camp.goal) < 30000);\r\n    const group4 = context.campaign.filter(camp => parseInt(camp.goal) >= 30000);\r\n\r\n    return(\r\n        <bs.Nav className=\"flex-column\">\r\n            Goal Amounts\r\n            <Link to={'/'} className='nav-link'>\r\n                All Campaigns ({context.campaign.length})\r\n            </Link>\r\n            <Link to={`/searchResults`} onClick={() => context.setFilteredCampaigns(group1)} className='nav-link'>Less Than $2,000 ({group1.length})</Link>\r\n            <Link to={`/searchResults`} onClick={() => context.setFilteredCampaigns(group2)} className='nav-link'>$2,000 - $9,999 ({group2.length})</Link>\r\n            <Link to={`/searchResults`} onClick={() => context.setFilteredCampaigns(group3)} className='nav-link'>$10,000 - $29,999 ({group3.length})</Link>\r\n            <Link to={`/searchResults`} onClick={() => context.setFilteredCampaigns(group4)} className='nav-link'>More Than $30,000 ({group4.length})</Link>\r\n        </bs.Nav>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport AppContext from './context';\r\n\r\nexport default function RightContainer(props) {\r\n    const context = React.useContext(AppContext);\r\n\r\n    const top5 = context.campaign.slice(0).sort((camp,b) => (parseFloat(b.current_amount)) - (parseFloat(camp.current_amount))).slice(0,5);\r\n\r\n    return(\r\n        <bs.Nav className=\"flex-column p-1\">\r\n            <div className=\"text-center mt-2\">\r\n            <p  style={{fontSize:\"1.5rem\"}}>Campaign Leaderboard</p>\r\n            <img alt=\"trophy\" src={`${process.env.PUBLIC_URL}/Images/trophy.ico`} style={{height:\"5rem\", width:\"5rem\"}}></img>\r\n            </div>\r\n            <ol className=\"m-2 p-2\">\r\n                {top5.map((camp) => {\r\n                    return (\r\n                        <Link key={camp.campaign_id} to={`/details/${camp.campaign_id}`} className='nav-link 'style={\r\n                            {fontSize:\"100%\",\r\n                            width:\"100%\",}}>\r\n                            <li>{camp.title}</li>\r\n                        </Link>\r\n                    )})}\r\n             </ol>\r\n        </bs.Nav>\r\n\r\n    )\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport './index.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function ProductCard(props) {\r\n    const prod = props.camp\r\n    const now = (parseFloat(prod.current_amount)/parseFloat(prod.goal)*100).toFixed(0)\r\n    const progressInstance = <bs.ProgressBar now={now} label={`${now}%`} style={{  \r\n        backgroundColor: \"darkgray\",\r\n        color: \"#004876\",\r\n        position: \"absolute\",\r\n        bottom:\"1em\",\r\n        width:\"86%\"}}/>\r\n\r\n    return (\r\n            <bs.Col md='3' key={prod.campaign_id}>\r\n                <bs.Card border=\"dark\" className=\"m-3\" style={{height:\"26em\"}}>\r\n                    <Link className='btn btn-outline-custom' to={`/details/${prod.campaign_id}`} style={{\r\n                        position:\"absolute\", \r\n                        top:0, \r\n                        right:0, \r\n                        }}>\r\n                        Details\r\n                    </Link>\r\n                    <bs.Card.Img src={prod.campaign_image_url} style={{height:\"16em\", width: \"100%\"}}></bs.Card.Img>\r\n                    <bs.Card.Footer style={{height:\"10em\", width: \"100%\"}}>\r\n                        <bs.Card.Title className=\"mb-1\" style={\r\n                            {fontSize:\".7vw\", \r\n                            textOverflow: \"ellipsis\",\r\n                            overflow: \"hidden\",\r\n                            width:\"100%\",\r\n                            display: \"-webkit-box\",\r\n                            WebkitLineClamp: \"2\",\r\n                            WebkitBoxOrient: \"vertical\"}}>\r\n                            <Link to={`/details/${prod.campaign_id}`} style={{color:\"black\"}}>{prod.title}</Link>\r\n                        </bs.Card.Title>\r\n                        <bs.Card.Text className=\"mb-0\" style={\r\n                            {position: \"absolute\",\r\n                            bottom: \"4.2em\",\r\n                            textOverflow: \"ellipsis\",\r\n                            overflow: \"hidden\",\r\n                            width:\"86%\",\r\n                            display: \"-webkit-box\",\r\n                            WebkitLineClamp: \"1\",\r\n                            WebkitBoxOrient: \"vertical\"}}>\r\n                            City: {prod.location_city ? prod.location_city : \"Not Listed\"}\r\n                        </bs.Card.Text >\r\n                        <bs.Card.Text className=\"mb-1\" style={\r\n                            {position: \"absolute\",\r\n                            bottom: \"2.1em\",\r\n                            width:\"86%\",\r\n                            textOverflow: \"ellipsis\",\r\n                            overflow: \"hidden\",\r\n                            display: \"-webkit-box\",\r\n                            WebkitLineClamp: \"1\",\r\n                            WebkitBoxOrient: \"vertical\"}}>\r\n                            <CurrencyFormat value={parseFloat(prod.current_amount).toFixed(0)} prefix={'$'} displayType={'text'} thousandSeparator={true} render={prod.current_amount}/>\r\n                            &nbsp;Out Of&nbsp;\r\n                            <CurrencyFormat value={parseFloat(prod.goal).toFixed(0)} prefix={'$'} displayType={'text'} thousandSeparator={true} render={prod.goal}/>\r\n                        </bs.Card.Text>\r\n                        {progressInstance}\r\n                    </bs.Card.Footer>\r\n                </bs.Card>\r\n            </bs.Col>\r\n            )\r\n}","import React from 'react';\r\nimport AppContext from './context';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport ProductCard from './productCard';\r\n\r\n// import CAMPAINS from './campains_small.js'\r\n\r\nexport default function Home(props) {\r\n    const context = React.useContext(AppContext)\r\n    const numOfCamp =  context.showCount\r\n    if(context.campaign == null){\r\n        return (\r\n        <h2 className=\"text-center mt-5\">\r\n            <bs.Spinner animation=\"border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </bs.Spinner>Loading Campaigns. Please Wait.\r\n        </h2>\r\n            )\r\n    }\r\n\r\n    return (\r\n        <bs.Container fluid className=\"text-center\">\r\n            <h3 className=\"mt-2\" style={{color:\"#00b964\"}}>Welcome to Covid-19 Fundraiser Analytics</h3>\r\n            <h6 style={{color:\"#00b964\"}}><i>\"Measuring and Predicting Success For Your GoFundMe Campaign\"</i></h6>\r\n            <bs.Row>\r\n                {/* {numOfCamp.map((prod) => { */}\r\n                {context.campaign.slice(0, numOfCamp).map((prod) => {\r\n                return (\r\n                    <ProductCard camp={prod} key={prod.campaign_id}/>\r\n                )\r\n                })}\r\n            </bs.Row>\r\n            <bs.Button className=\"m-2\" style={{backgroundColor:\"#00b964\", borderColor: \"white\"}} onClick= {e=>{\r\n                        context.loadMoreCamp(true);\r\n                    }}>Show More Campaigns</bs.Button>\r\n            <br></br>\r\n            <i className=\"fas fa-chevron-down fa-lg\"></i>\r\n        </bs.Container>\r\n)\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport MailTo from 'react-mailto';\r\n\r\nexport default function Help() {\r\n    return (\r\n        <bs.Container className=\"text-center\">\r\n            <h3 className=\"mt-4\" style={{color:\"#00b964\"}}>Contact Us!</h3>\r\n            \r\n                <bs.Row className=\"text-center mt-4\" >\r\n                    <bs.Col></bs.Col>\r\n                    <bs.Col className=\"text-center\" xs={6}>\r\n                        <p>\r\n                            We are here to help. If you have any questions please reach out to us by email. Our email is: <MailTo email=\"COVID19fundraiseranalytics@gmail.com\">COVID19fundraiseranalytics@gmail.com</MailTo>\r\n                        <br></br><br></br><br></br>\r\n                        <i className=\"fas fa-question-circle\" style={{\r\n                            fontSize: \"14rem\",\r\n                            color: \"blue\",\r\n                            marginBottom: \"1rem\"\r\n                        }}></i>\r\n                        </p>\r\n                    </bs.Col>\r\n                    <bs.Col></bs.Col>\r\n                </bs.Row>\r\n         </bs.Container>\r\n    )\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\n\r\nexport default function About() {\r\n    return (\r\n        <bs.Container className=\"text-center\">\r\n            <h3 className=\"mt-4\" style={{color:\"#00b964\"}}>Welcome to Covid-19 Fundraiser Analytics</h3>\r\n            \r\n                <bs.Row className=\"text-center mt-4\" >\r\n                    <bs.Col></bs.Col>\r\n                    <bs.Col className=\"text-center\" xs={6}>\r\n                        <p>\r\n                            COVID-19 Fundraiser Analytics mission is to help all those affected by COVID-19. We strive to present our clients with up-to-date data \r\n                            and analytics to help create a successful campaign. \r\n                        </p>\r\n                        <p>\r\n                            We are a group of BYU Information Systems students that just want to make a difference in the world.\r\n                        <br></br><br></br><br></br>\r\n                        <img alt=\"IS Logo\" src={`${process.env.PUBLIC_URL}/Images/islogo.jfif`}></img>\r\n                        </p>\r\n                    </bs.Col>\r\n                    <bs.Col></bs.Col>\r\n                </bs.Row>\r\n         </bs.Container>\r\n    )\r\n}","import React from 'react';\r\nimport './App.scss';\r\nimport AppContext from './context';\r\nimport * as bs from 'react-bootstrap';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { useRouteMatch } from \"react-router-dom\";\r\nimport axios from 'axios';\r\n\r\nexport default function Details(props) {\r\n    \r\n    const context = React.useContext(AppContext);\r\n    const match = useRouteMatch(\"/details/:id\");\r\n\r\n    let item = context.campaign.find( ({ campaign_id }) => campaign_id === (match.params.id) );\r\n\r\n    const [showRespOutput, setRespOutput] = React.useState(\"\");\r\n\r\n    if(item == null){\r\n        return <h2 className=\"text-center mt-5\">404 Error. Page not found.</h2>\r\n    }\r\n\r\n    const columnInput = 0\r\n    const unnamedInput = 0\r\n    if (item.column === \"\") {\r\n        item.column = \"0\"   \r\n    }\r\n    if (item.unnamed === \"\") {\r\n        item.unnamed = \"0\"   \r\n    }\r\n    if (item.campaign_id === \"\") {\r\n        item.campaign_id = \"0\"   \r\n    }\r\n    if (item.auto_fb_post_mode === \"\") {\r\n        item.auto_fb_post_mode = \"0\"  \r\n    }\r\n    if (item.currencycode === \"\") {\r\n        item.currencycode = \"USD\"   \r\n    }\r\n    if (item.current_amount === \"\") {\r\n        item.current_amount = \"0\"   \r\n    }\r\n    if (item.goal === \"\") {\r\n        item.goal = \"0\"   \r\n    }\r\n    if (item.donators === \"\") {\r\n        item.donators = \"0\"   \r\n    }\r\n    if (item.days_active === \"\") {\r\n        item.days_active = \"0\"   \r\n    }\r\n    if (item.title === \"\") {\r\n        item.title = \"Hi\"   \r\n    }\r\n    if (item.description === \"\") {\r\n        item.description = \"Hi\"   \r\n    }\r\n    if (item.has_beneficiary === \"\") {\r\n        item.has_beneficiary = \"0\"   \r\n    }\r\n    if (item.user_id === \"\") {\r\n        item.user_id = \"0\"   \r\n    }\r\n    if (item.visible_in_search === \"\") {\r\n        item.visible_in_search = \"0\"   \r\n    }\r\n    if (item.is_launched === \"\") {\r\n        item.is_launched = \"0\"   \r\n    }\r\n    if (item.campaign_hearts === \"\") {\r\n        item.campaign_hearts = \"0\"   \r\n    }\r\n    if (item.social_share_total === \"\") {\r\n        item.social_share_total = \"0\"   \r\n    }\r\n    if (item.location_city === \"\") {\r\n        item.location_city = \"Hi\"   \r\n    }\r\n    if (item.location_country === \"\") {\r\n        item.location_country = \"US\"   \r\n    }\r\n    if (item.location_zip === \"\") {\r\n        item.location_zip = \"12345\"   \r\n    }\r\n\r\n    //Write an if statement to not include if the variable is blank\r\n    //Write validations for the inputes (ex. zip) that may have characters to be set to 0\r\n    Quality(item)\r\n    // This is where we send the details of the campaign to the Azure api\r\n    async function Quality(item) {\r\n        // const resp = await axios.post('http://localhost:8000/api/QualityAPI/', {\r\n        const resp = await axios.post('/api/QualityAPI/', {\r\n            column: columnInput,\r\n            unnamed: unnamedInput,\r\n            campaign_id: item.campaign_id,\r\n            auto_fb_post_mode: item.auto_fb_post_mode,\r\n            currencycode: item.currencycode,\r\n            current_amount: item.current_amount,\r\n            goal: item.goal,\r\n            donators: item.donators,\r\n            days_active: item.days_active,\r\n            title: item.title,\r\n            description: item.description,\r\n            has_beneficiary: item.has_beneficiary,\r\n            user_id: item.user_id,\r\n            visible_in_search: item.visible_in_search,\r\n            is_launched: item.is_launched,\r\n            campaign_hearts: item.campaign_hearts,\r\n            social_share_total: item.social_share_total,\r\n            location_city: item.location_city,\r\n            location_country: item.location_country,\r\n            location_zip: item.location_zip,\r\n            averageMoneyPerDay: (item.current_amount / item.days_active),\r\n            donationsPerDay: (item.donators / item.days_active),\r\n            PercentPerDay: ((item.current_amount / item.goal) / item.days_active),\r\n            SharesPerDay: (item.social_share_total / item.days_active),\r\n            campaignheartsPerDay: (item.campaign_hearts / item.days_active),\r\n        })\r\n\r\n        const respOutput = (parseFloat(resp.data['result']))\r\n        const percCalc = (respOutput * 100).toFixed(1)\r\n        setRespOutput(percCalc)\r\n    }\r\n\r\n    return (\r\n\r\n        <bs.Container fluid className=\"p-0\">\r\n            <ShowTheImage campaigns={context.campaign} cid={match.params.id}/>\r\n            <div style={{padding:'1.5rem', marginRight:'3rem'}}>\r\n                <br/>\r\n                <h3><b>{item.title}</b></h3>\r\n                <p style={{fontSize:\"1vw\"}}><i>\r\n                    <CurrencyFormat value={parseFloat(item.current_amount).toFixed(0)} prefix={'$'} displayType={'text'} thousandSeparator={true} render={item.current_amount}/>\r\n                    &nbsp;Out Of&nbsp;\r\n                    <CurrencyFormat value={parseFloat(item.goal).toFixed(0)} prefix={'$'} displayType={'text'} thousandSeparator={true} render={item.goal}/>\r\n                </i></p>\r\n                \r\n                <p style={{ fontWeight: 'bold', fontSize: '15px', color: 'red'}}>Predicted Goal Completion Rate Per Day: {showRespOutput}%</p>\r\n                \r\n                <h5 className=\"mt-2\">Campaign Description</h5>\r\n                <p>{item.description}</p>\r\n                <h5>Additional Campaign Info</h5>\r\n                <p>Days Active: {(item.days_active)}\r\n                <br></br>\r\n                Donation Count: {(item.donators)}\r\n                <br></br>\r\n                City: {item.location_city}\r\n                <br></br>\r\n                Country: {item.location_country}</p>\r\n            </div>\r\n\r\n            <div>\r\n            </div>\r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nconst ShowTheImage = (props) => {\r\n    return(\r\n        <div className=\"float-right\" style={{position:\"relative\", margin:\"2rem\"}}>\r\n            <bs.Image src={props.campaigns.find( ({ campaign_id }) => campaign_id === (props.cid) ).campaign_image_url} style={{height:\"400px\", width:\"400px\"}} />\r\n        </div>\r\n    );\r\n}","\r\nimport React from 'react';\r\nimport AppContext from './context';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\n\r\n\r\nexport default function Search(props) {\r\n    window.scrollTo(0, 0)\r\n    return (\r\n        <bs.Container fluid className=\"text-center\" style={{width:\"50%\"}}> \r\n            <br></br>\r\n            <SearchForm/>\r\n        </bs.Container>\r\n)\r\n}\r\n\r\nconst SearchForm = props => {\r\n    const context = React.useContext(AppContext);\r\n    let history = useHistory();\r\n\r\n    const countries = [...new Set(context.campaign.map(camp => camp.location_country))];\r\n    countries.sort();\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const goalFilter = event.target.elements.formGoal.value;\r\n        const countryFilter = event.target.elements.formCountry.value;\r\n        const stateFilter = event.target.elements.formState.value;\r\n        const hasBeneficiaryFilter = event.target.elements.formHasBeneficiary.value;\r\n        const percentGoalFilter = event.target.elements.formPercentGoal.value;\r\n\r\n        context.filterCampaigns(goalFilter, countryFilter, stateFilter, hasBeneficiaryFilter, percentGoalFilter);\r\n        context.resetShowCount();\r\n        history.push('/searchResults');\r\n  };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <bs.Form onSubmit={(e) => handleSubmit(e)} >\r\n            <bs.CardGroup>\r\n                 <bs.Card>\r\n                    <bs.Card.Body>\r\n                        <bs.Card.Title className = \"mb-1\" style={{ color: 'black', fontSize: '30px', textAlign: 'center'}}>Filter Campaigns</bs.Card.Title>\r\n                        <p style={{fontSize: \"14pt\"}}>Search active GoFundMe campaigns that relate to Covid-19</p>\r\n                        <bs.Form.Group as={bs.Row}>\r\n                            <bs.Form.Label column sm={4} className=\"text-right\">Goal</bs.Form.Label>\r\n                            <bs.Col sm={8}>\r\n                                <bs.Form.Control type=\"dropdown\" as=\"select\" defaultValue=\"\" name=\"formGoal\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"<2000\">Less Than $2,000</option>\r\n                                    <option value=\"2000-9999\">$2,000 - $9,999</option>\r\n                                    <option value=\"10000-29999\">$10,000 - $29,999</option>\r\n                                    <option value=\">=30000\">$30,000+</option>\r\n                                </bs.Form.Control>\r\n                            </bs.Col>\r\n                        </bs.Form.Group>\r\n                        <bs.Form.Group as={bs.Row}>\r\n                            <bs.Form.Label column sm={4} className=\"text-right\">Percentage of Goal Complete</bs.Form.Label>\r\n                            <bs.Col sm={8}>\r\n                                <bs.Form.Control type=\"dropdown\" as=\"select\" defaultValue=\"\" name=\"formPercentGoal\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"<5\">Less Than 5%</option>\r\n                                    <option value=\"5-15\">5-15%</option>\r\n                                    <option value=\"15-30\">15-30%</option>\r\n                                    <option value=\"30+\">More Than 30%</option>\r\n                                </bs.Form.Control>\r\n                            </bs.Col>\r\n                        </bs.Form.Group>\r\n                        <bs.Form.Group as={bs.Row}>\r\n                            <bs.Form.Label column sm={4} className=\"text-right\">Is there a Beneficiary?</bs.Form.Label>\r\n                            <bs.Col sm={8}>\r\n                                <bs.Form.Control type=\"dropdown\" as=\"select\" defaultValue=\"\" name=\"formHasBeneficiary\">\r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"True\">Yes</option>\r\n                                    <option value=\"False\">No</option>\r\n                                </bs.Form.Control>\r\n                            </bs.Col>\r\n                        </bs.Form.Group>\r\n                        <bs.Form.Group as={bs.Row}>\r\n                            <bs.Form.Label column sm={4} className=\"text-right\">Country</bs.Form.Label>\r\n                            <bs.Col sm={8}>\r\n                                <bs.Form.Control type=\"dropdown\" as=\"select\" defaultValue=\"\" name=\"formCountry\">\r\n                                    {countries.map((country)=> {\r\n                                        return <option value={country} key={country}>{country}</option>\r\n                                        })}\r\n                                </bs.Form.Control>\r\n                            </bs.Col>\r\n                        </bs.Form.Group>\r\n                        <bs.Form.Group as={bs.Row}>\r\n                            <bs.Form.Label column sm={4} className=\"text-right\">State</bs.Form.Label>\r\n                            <bs.Col sm={8}>\r\n                                <bs.Form.Control type=\"dropdown\" as=\"select\" defaultValue=\"\" name=\"formState\"> \r\n                                    <option value=\"\"></option>\r\n                                    <option value=\"AL\">Alabama</option>\r\n                                    <option value=\"AK\">Alaska</option>\r\n                                    <option value=\"AZ\">Arizona</option>\r\n                                    <option value=\"AR\">Arkansas</option>\r\n                                    <option value=\"CA\">California</option>\r\n                                    <option value=\"CO\">Colorado</option>\r\n                                    <option value=\"CT\">Connecticut</option>\r\n                                    <option value=\"DE\">Delaware</option>\r\n                                    <option value=\"DC\">District of Columbia</option>\r\n                                    <option value=\"FL\">Florida</option>\r\n                                    <option value=\"GA\">Georgia</option>\r\n                                    <option value=\"HI\">Hawaii</option>\r\n                                    <option value=\"ID\">Idaho</option>\r\n                                    <option value=\"IL\">Illinois</option>\r\n                                    <option value=\"IN\">Indiana</option>\r\n                                    <option value=\"IA\">Iowa</option>\r\n                                    <option value=\"KS\">Kansas</option>\r\n                                    <option value=\"KY\">Kentucky</option>\r\n                                    <option value=\"LA\">Louisiana</option>\r\n                                    <option value=\"ME\">Maine</option>\r\n                                    <option value=\"MD\">Maryland</option>\r\n                                    <option value=\"MA\">Massachusetts</option>\r\n                                    <option value=\"MI\">Michigan</option>\r\n                                    <option value=\"MN\">Minnesota</option>\r\n                                    <option value=\"MS\">Mississippi</option>\r\n                                    <option value=\"MO\">Missouri</option>\r\n                                    <option value=\"MT\">Montana</option>\r\n                                    <option value=\"NE\">Nebraska</option>\r\n                                    <option value=\"NV\">Nevada</option>\r\n                                    <option value=\"NH\">New Hampshire</option>\r\n                                    <option value=\"NJ\">New Jersey</option>\r\n                                    <option value=\"NM\">New Mexico</option>\r\n                                    <option value=\"NY\">New York</option>\r\n                                    <option value=\"NC\">North Carolina</option>\r\n                                    <option value=\"ND\">North Dakota</option>\r\n                                    <option value=\"OH\">Ohio</option>\r\n                                    <option value=\"OK\">Oklahoma</option>\r\n                                    <option value=\"OR\">Oregon</option>\r\n                                    <option value=\"PA\">Pennsylvania</option>\r\n                                    <option value=\"RI\">Rhode Island</option>\r\n                                    <option value=\"SC\">South Carolina</option>\r\n                                    <option value=\"SD\">South Dakota</option>\r\n                                    <option value=\"TN\">Tennessee</option>\r\n                                    <option value=\"TX\">Texas</option>\r\n                                    <option value=\"UT\">Utah</option>\r\n                                    <option value=\"VT\">Vermont</option>\r\n                                    <option value=\"VA\">Virginia</option>\r\n                                    <option value=\"WA\">Washington</option>\r\n                                    <option value=\"WV\">West Virginia</option>\r\n                                    <option value=\"WI\">Wisconsin</option>\r\n                                    <option value=\"WY\">Wyoming</option>\r\n                                </bs.Form.Control>\r\n                            </bs.Col>\r\n                        </bs.Form.Group>\r\n                    </bs.Card.Body>\r\n                    <bs.Button size=\"lg\" className='mt-1 align-center text-center' variant=\"success\" type=\"submit\">Find</bs.Button>\r\n                </bs.Card>\r\n            </bs.CardGroup>\r\n        </bs.Form>\r\n)}\r\n\r\n\r\n","import React from 'react';\r\nimport AppContext from './context';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport ProductCard from './productCard';\r\n\r\nexport default function Filtered(props) {\r\n    const context = React.useContext(AppContext)\r\n    const numOfCamp =  context.showCount\r\n\r\n    return (\r\n        <bs.Container fluid className=\"text-center\">\r\n            <h2 className=\"mt-2\">Search Results</h2>\r\n            <h5><i>Found {context.filteredCampaigns.length} results</i></h5>\r\n            <bs.Row>\r\n                {context.filteredCampaigns.slice(0, numOfCamp).map((prod) => {\r\n                return (\r\n                    <ProductCard camp={prod} key={prod.campaign_id}/>\r\n                )\r\n                })}\r\n            </bs.Row>\r\n         <bs.Button className=\"m-2\" style={{backgroundColor:\"#00b964\", borderColor: \"white\"}} onClick= {e=>{\r\n                    context.loadMoreCamp(true);\r\n                }}>Show More Campaigns</bs.Button>\r\n                <br></br>\r\n        <i class=\"fas fa-chevron-down\"></i>\r\n        </bs.Container>\r\n)\r\n}","import React from 'react';\r\nimport * as bs from 'react-bootstrap';\r\nimport AppContext from './context';\r\nimport axios from 'axios';\r\n\r\nfunction Predict(props) {\r\n    const context = React.useContext(AppContext);\r\n    \r\n    const countries = [...new Set(context.campaign.map(camp => camp.location_country))];\r\n    countries.sort();\r\n    \r\n    const currencyCodes = [...new Set(context.campaign.map(camp => camp.currencycode))];\r\n    currencyCodes.sort();\r\n    \r\n    return (\r\n        <bs.Container fluid className=\"text-center my-3\">\r\n            <PredictiveForm countries={countries} currencyCodes={currencyCodes}/>\r\n        </bs.Container>\r\n    )\r\n}\r\nexport default Predict\r\n\r\n\r\nconst PredictiveForm = (props) => {\r\n    const stateList = [\"\",\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\"];\r\n    \r\n    const [showPrediction, setPrediction] = React.useState(\"\")\r\n    const [validated, setValidated] = React.useState(false);\r\n\r\n    const handleSubmit = async (event) => {\r\n            \r\n            if (event.target.checkValidity() === false) {\r\n                console.log(\"validation failed\");\r\n                event.preventDefault();\r\n                event.stopPropagation();\r\n                setValidated(false);\r\n\r\n                window.scroll(0,0)\r\n                return alert(\"Please make sure to fill out all fields!\");\r\n              }\r\n            event.preventDefault();\r\n            setValidated(true);\r\n\r\n\r\n            let city = \"\";\r\n            if(event.target.elements.location_city.value !== undefined){\r\n                city = event.target.elements.location_city.value.concat(\", \", event.target.elements.location_state.value);\r\n            }\r\n            else{\r\n                city = event.target.elements.location_city.value;\r\n            }\r\n            // const resp = await axios.post('http://localhost:8000/api/PredictiveAPI/', {\r\n            const resp = await axios.post('/api/PredictiveAPI/', {\r\n                column: '0',\r\n                unnamed: '0',\r\n                campaign_id: '0',\r\n                auto_fb_post_mode: parseInt(event.target.elements.auto_fb_post_mode.value),\r\n                currencycode: event.target.elements.currencycode.value,\r\n                current_amount: '0',\r\n                goal: event.target.elements.goal.value,\r\n                donators: '0',\r\n                days_active: '0',\r\n                title: event.target.elements.title.value,\r\n                description: event.target.elements.description.value,\r\n                has_beneficiary: parseInt(event.target.elements.has_beneficiary.value),\r\n                user_id: '0',\r\n                visible_in_search: '0',\r\n                is_launched: '0',\r\n                campaign_hearts: '0',\r\n                social_share_total: '0',\r\n                location_city: city,\r\n                location_country: event.target.elements.location_country.value,\r\n                location_zip: event.target.elements.location_zip.value,\r\n                averageMoneyPerDay: '0',\r\n            })\r\n\r\n            console.log(resp);\r\n            const respInput = resp.data['result']\r\n            const reCalcResp = parseFloat(Math.exp(respInput) - 1).toFixed(2)\r\n            setPrediction(`You can expect to earn an average of $${reCalcResp} per day!`);\r\n            window.scrollTo(0, 0);\r\n            \r\n            await new Promise(resolve => {\r\n                setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\r\n                    resolve()\r\n                }, 2000)\r\n            })\r\n    };\r\n    return (\r\n                <bs.Form id=\"campaignCalculator\" noValidate validated={validated} onSubmit={(e) => handleSubmit(e)} >\r\n                    <bs.Row>\r\n                        <bs.Col sm={8}>\r\n                            <bs.Card style={{ width: '100%'}}>\r\n                                <bs.Card.Body>\r\n                                    <bs.Card.Title style={{ color: 'black', fontSize: '30px', textAlign: 'center'}}>Go-Fund-Me Success Calculator</bs.Card.Title>\r\n                                    <p>Enter the details for the GoFundMe Campaign you are planning, and we will predict how successful it will be!</p>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"title\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Title</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"title\" type=\"text\" placeholder=\"Campaign Title\"/>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"description\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Description</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"description\" type=\"text\" placeholder=\"Campaign Description\"/>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"goal\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Goal</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"goal\" type=\"text\" placeholder=\"Monetary Goal\"/>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"location_city\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">City</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"location_city\" type=\"text\"/>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"location_state\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">State</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control name=\"location_state\" type=\"dropdown\" as=\"select\">\r\n                                                    {stateList.map((state)=> {\r\n                                                        return <option value={state} key={state}>{state}</option>\r\n                                                    })}\r\n                                                </bs.Form.Control>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"location_country\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Country</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"location_country\" type=\"dropdown\" as=\"select\">\r\n                                                    {props.countries.map((country)=> {\r\n                                                        return <option value={country} key={country}>{country}</option>\r\n                                                    })}\r\n                                                </bs.Form.Control>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"location_zip\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Zipcode</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"location_zip\" type=\"text\"/>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"currencycode\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Currency Type</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"currencycode\" type=\"dropdown\" as=\"select\">\r\n                                                    {props.currencyCodes.map((code)=> {\r\n                                                        return <option value={code} key={code}>{code}</option>\r\n                                                    })}\r\n                                                </bs.Form.Control>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"has_beneficiary\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Has Beneficiary?</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"has_beneficiary\" type=\"dropdown\" defaultValue={1} as=\"select\">\r\n                                                    <option value={1}>Yes</option>\r\n                                                    <option value={0}>No</option>\r\n                                                </bs.Form.Control>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                        <bs.Form.Group as={bs.Row} controlId=\"auto_fb_post_mode\">\r\n                                            <bs.Form.Label column sm={4} className=\"text-right\">Auto Post to Facebook?</bs.Form.Label>\r\n                                            <bs.Col sm={8}>\r\n                                                <bs.Form.Control required name=\"auto_fb_post_mode\" type=\"dropdown\" defaultValue={1} as=\"select\">\r\n                                                    <option value={1}>Yes</option>\r\n                                                    <option value={0}>No</option>\r\n                                                </bs.Form.Control>\r\n                                            </bs.Col>\r\n                                        </bs.Form.Group>\r\n                                </bs.Card.Body>\r\n                                <bs.Button size=\"lg\" className='mt-1 align-center text-center' type=\"submit\">\r\n                                    Calculate\r\n                                </bs.Button>\r\n                            </bs.Card> \r\n                        </bs.Col>\r\n                        <bs.Col sm={4}>      \r\n                            <bs.Container style={{ width: '100%'}} >\r\n                                <h1 style={{ color: 'black', fontSize: '30px', textAlign: 'center', paddingTop: \"20px\"}}>Results</h1>\r\n                                <p style={{ fontSize: '30px', color: 'red', textAlign: \"center\"}}>{showPrediction}</p>\r\n                                <br></br>\r\n                                <br></br>\r\n                                {/* <bs.Button size=\"lg\" className='btn btn-warning mt-1 align-center text-center' onClick={ReactDOM.findDOMNode(this).getElementsByClassName(\"Form\").reset()}>\r\n                                    Clear Calculator\r\n                                </bs.Button> */}\r\n                                {/* <bs.Button size=\"lg\" className='btn btn-warning mt-1 align-center text-center' onClick={history.push('/analytics')}>\r\n                                    Reload Window\r\n                                </bs.Button>\r\n                                <Link className='btn btn-warning mt-1 align-center text-center' to={`/analytics/`} style={{size:\"lg\",}}>\r\n                                    Try Again\r\n                                </Link> */}\r\n                            </bs.Container>\r\n                        </bs.Col>\r\n                    </bs.Row> \r\n                </bs.Form>\r\n    )\r\n}\r\n\r\n// const PredictiveForm = props => {\r\n//     return(\r\n        \r\n//     )\r\n// }\r\n\r\n// const countryList = (props) => {\r\n//     const context = React.useContext(AppContext);\r\n\r\n//     const countries = [...new Set(context.campaign.map(camp => camp.location_country))];\r\n//     countries.sort();\r\n\r\n//     countries.map((country)=> {\r\n//     return (<option value={country} key={country}>{country}</option>)\r\n// })}\r\n\r\n// const optionList = (props) => (\r\n//     props.options.map((opt) => {\r\n//         return(<option key={opt[0]+'id'} value={opt[1]}>{opt[0]}</option>)\r\n// }))\r\n\r\n// const statesList = (props) => (\r\n//     props.options.map((opt) => {\r\n//         return(<option key={opt+'id'} value={opt}>{opt}</option>)\r\n// }))\r\n\r\n// const Input = (props) => (\r\n//     <div>\r\n//         <Field name={props.name}>{rProps => (\r\n//             <bs.Form.Group as={bs.Row}>\r\n//                 {props.title &&\r\n//                     <bs.Form.Label column sm={4} className=\"text-right\">{props.title}</bs.Form.Label>\r\n//                 }\r\n//                 <bs.Col sm={8}>\r\n//                     <bs.Form.Control\r\n//                         type={props.type}\r\n//                         as={props.as}\r\n//                         placeholder={props.placeholder}\r\n//                         disabled={rProps.form.isSubmitting}          \r\n//                         {...rProps.field}\r\n//                     >\r\n//                     {props.states===\"yes\" ? statesList(props) : props.options && optionList(props)}\r\n//                     </bs.Form.Control>\r\n//                 </bs.Col>\r\n//                 {rProps.meta.touched && rProps.meta.error &&\r\n//                     <div className=\"text-danger\">{rProps.meta.error}</div>\r\n//                 }\r\n//             </bs.Form.Group>\r\n//         )}</Field>\r\n//     </div>\r\n// )\r\n","import React from 'react';\r\nimport './App.scss';\r\nimport * as bs from 'react-bootstrap';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport FooterContainer from './footer';\r\nimport HeaderContainer from './header';\r\nimport LeftContainer from './leftContainer';\r\nimport RightContainer from './rightContainer';\r\nimport Home from './home';\r\nimport Help from './help';\r\nimport About from './about';\r\nimport Details from './details';\r\nimport Search from './search';\r\nimport Filtered from './filtered';\r\nimport Analytics from './analytics';\r\n\r\nexport default function App(props) {\r\nreturn (\r\n        <Router>\r\n          <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\r\n            <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 shadow-sm navbar\" style={{paddingBottom:\"50px\"}}>\r\n                <HeaderContainer />\r\n            </bs.Row>\r\n            <bs.Row noGutters className=\"flex-grow-1\">\r\n              <bs.Col md=\"2\" className=\"px-3 py-4 shadow\" style={{backgroundColor:\"#f0ead6\"}}>\r\n                <LeftContainer />\r\n              </bs.Col>\r\n              <bs.Col md=\"8\">\r\n                <Switch onUpdate={() => window.scrollTo(0, 0)}>\r\n                  <Route path=\"/about\" component={About} />\r\n                    {/* <About /> */}\r\n                  {/* </Route> */}\r\n                  <Route path=\"/search\" component={Search}/>\r\n                    {/* <Search /> */}\r\n                  {/* </Route> */}\r\n                  <Route path=\"/analytics\" component={Analytics}/>\r\n                    {/* <Analytics /> */}\r\n                  {/* </Route> */}\r\n                  <Route path=\"/help\" component={Help}/>\r\n                    {/* <Help /> */}\r\n                  {/* </Route> */}\r\n                  <Route path=\"/searchResults\" component={Filtered}/>\r\n                    {/* // <Filtered /> */}\r\n                  {/* // </Route> */}\r\n                  <Route path=\"/details/:id\" component={Details}/>\r\n                    {/* <Details /> */}\r\n                  {/* // </Route> */}\r\n                  <Route path=\"/\" component={Home}/>\r\n                    {/* <Home /> */}\r\n                  {/* // </Route> */}\r\n                </Switch>\r\n              </bs.Col>\r\n              <bs.Col md=\"2\" className=\"shadow\" style={{backgroundColor:\"lightblue\"}}>\r\n                  <RightContainer />\r\n              </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 shadow-sm\">\r\n              <FooterContainer />\r\n            </bs.Row>\r\n          </bs.Container>\r\n        </Router>\r\n  );\r\n}","import React from 'react'\r\nimport axios from 'axios'\r\nimport AppContext from './context'\r\nimport App from './App'\r\nimport { produce } from 'immer'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            loadMoreCamp: this.loadMoreCamp,\r\n            filterCampaigns: this.filterCampaigns,\r\n            resetShowCount: this.resetShowCount,\r\n            setFilteredCampaigns: this.setFilteredCampaigns\r\n        }\r\n        this.state = {\r\n            campaign: [],\r\n            donation: [],\r\n            update: [],\r\n            showCount: 8,\r\n            showMore: false,\r\n            filteredCampaigns: []\r\n        }\r\n    }\r\n    \r\n\r\n    render() {\r\n        if (!this.state.campaign) {\r\n            return <div>Loading...</div>\r\n        }\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}}>\r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    resetShowCount = () => {\r\n        this.setState(state => produce(state, draft => {\r\n            draft.showCount = 8;\r\n        }))\r\n    }\r\n\r\n    setFilteredCampaigns = (myArray) => {\r\n        this.setState(state => produce(state, draft => {\r\n            draft.filteredCampaigns = myArray;\r\n        }))\r\n    }\r\n\r\n    loadMoreCamp = (input) => {\r\n        this.setState(state => produce(state, draft => {\r\n            if(input === true) {\r\n                draft.showMore = input\r\n                draft.showCount = draft.showCount + 8\r\n            }\r\n        }))\r\n    }\r\n\r\n    filterCampaigns = (goalFilter, countryFilter, stateFilter, hasBeneficiaryFilter, percentGoalFilter) => {\r\n        this.setState(state => produce(state, draft => {\r\n            // FILTER GOALS\r\n            if(goalFilter === \"<2000\"){\r\n                draft.filteredCampaigns = draft.campaign.filter(camp => parseInt(camp.goal) < 2000)}\r\n            else if(goalFilter === \"2000-9999\"){\r\n                draft.filteredCampaigns = draft.campaign.filter(camp => parseInt(camp.goal) >= 2000 && parseInt(camp.goal) < 10000)}\r\n            else if(goalFilter === \"10000-29999\"){\r\n                draft.filteredCampaigns = draft.campaign.filter(camp => parseInt(camp.goal) >= 10000 && parseInt(camp.goal) < 30000)}\r\n            else if(goalFilter === \">=30000\"){\r\n                draft.filteredCampaigns = draft.campaign.filter(camp => parseInt(camp.goal) >= 30000)}\r\n            else{\r\n                draft.filteredCampaigns = draft.campaign}\r\n\r\n            // FILTER COUNTRIES\r\n            if(countryFilter !== \"\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => camp.location_country === countryFilter)}\r\n            \r\n            // FILTER STATES\r\n            if(stateFilter !== \"\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => camp.location_city.slice(-2) === stateFilter)}   \r\n                \r\n            // FILTER HAS_BENEFICIARY\r\n            if(hasBeneficiaryFilter === \"\"){}\r\n            else if(hasBeneficiaryFilter === \"True\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => camp.has_beneficiary === \"True\")}\r\n            else if(hasBeneficiaryFilter === \"False\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => camp.has_beneficiary === \"False\")}\r\n\r\n            // FILTER GOAL PERCENT COMPLETE\r\n            if(percentGoalFilter === \"\"){}\r\n            else if(percentGoalFilter === \"<5\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => (parseFloat(camp.current_amount)/parseFloat(camp.goal)*100).toFixed(0) < 5)}\r\n            else if(percentGoalFilter === \"5-15\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => (parseFloat(camp.current_amount)/parseFloat(camp.goal)*100).toFixed(0) >= 5 && (parseFloat(camp.current_amount)/parseFloat(camp.goal)*100).toFixed(0) < 15)}\r\n            else if(percentGoalFilter === \"15-30\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => (parseFloat(camp.current_amount)/parseFloat(camp.goal)*100).toFixed(0) >= 15 && (parseFloat(camp.current_amount)/parseFloat(camp.goal)*100).toFixed(0) < 30)}\r\n            else if(percentGoalFilter === \"30+\"){\r\n                draft.filteredCampaigns = draft.filteredCampaigns.filter(camp => (parseFloat(camp.current_amount)/parseFloat(camp.goal)*100).toFixed(0) >= 30)}\r\n            \r\n        }))\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const cam = await axios.get('/api/campaign/')\r\n        const don = await axios.get('/api/donation/')\r\n        const upd = await axios.get('/api/update/')\r\n        \r\n        // const cam = await axios.get('http://localhost:8000/api/campaign/')\r\n        // const don = await axios.get('http://localhost:8000/api/donation/')\r\n        // const upd = await axios.get('http://localhost:8000/api/update/')\r\n\r\n        // console.log(cam.data)\r\n\r\n        this.setState({campaign: cam.data, donation: don.data, update: upd.data})\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}